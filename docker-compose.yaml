version: '3.8'

services:
  nginx:
    image: nginx:1.25.3-alpine-slim
    container_name: nginx
    restart: always
    ports:
      - 8080:8080
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./deployment/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - frontnet

  nginx-prometheus-exporter:
    image: nginx/nginx-prometheus-exporter:1.0.0
    container_name: nginx-prometheus-exporter
    restart: always
    ports:
      - 9113:9113
    networks:
      - frontnet
    depends_on:
      - nginx
    command: -nginx.scrape-uri http://nginx:8080/nginx_status


  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    networks:
      - frontnet
    volumes:
      - ./deployment/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
      - ./docker_mount/prometheus_data:/prometheus
    command:
      - '--storage.tsdb.retention.size=1GB'
      - '--config.file=/etc/prometheus/prometheus.yaml'

  grafana:
    image: grafana/grafana:10.2.2
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    networks:
      - frontnet
    environment:
      - GF_SECURITY_ADMIN_USER={account}
      - GF_SECURITY_ADMIN_PASSWORD={pwd}
    volumes:
      - ./docker_mount/grafana_data:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus

networks:
  frontnet:
    driver: bridge